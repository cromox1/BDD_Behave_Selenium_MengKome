Feature: Attempt to logging in with invalid credentials # tests/python_main_site/features/feature1_login_invalid.feature:1

  Scenario: None existing user try to login            # tests/python_main_site/features/feature1_login_invalid.feature:3
    Given I have non-exist user                        # None
    When I type username                               # None
    When I type password                               # None
    When I click on 'Login'                            # None
    Then I should see the text 'Error: User not found' # None

  Scenario: User try to login with wrong password          # tests/python_main_site/features/feature1_login_invalid.feature:11
    Given I have a user                                    # None
    When I type username                                   # None
    When I type random password                            # None
    When I click on 'Login'                                # None
    Then I should see the text 'Error: Incorrect password' # None

  Scenario: User try to login with no password                  # tests/python_main_site/features/feature1_login_invalid.feature:20
    Given I have a user                                         # None
    When I type username                                        # None
    When I click on 'Login'                                     # None
    Then I should see the text 'Error: Password field is empty' # None

  Scenario: User try to login with invalid format email  # tests/python_main_site/features/feature1_login_invalid.feature:28
    Given I have a user                                  # None
    When I type invalid format username                  # None
    When I type password                                 # None
    When I click on 'Login'                              # None
    Then I should see the text 'Error: User not found'   # None

Feature: Logging in with valid credentials # tests/python_main_site/features/feature2_login_valid.feature:1

  Scenario: User login successfully                      # tests/python_main_site/features/feature2_login_valid.feature:3
    Given I go to the site "mengkome.pythonanywhere.com" # BDDCommon/CommonSteps/webstepscommon.py:8
Navigating to the site: http://mengkome.pythonanywhere.com/admin/login/?next=/
    And I have a valid user                              # tests/python_main_site/steps/steps.py:9
USER / PSWD = bacaone / ************
    When I type username                                 # tests/python_main_site/steps/steps.py:16
      Traceback (most recent call last):
        File "c:\tools\python38\lib\site-packages\behave\model.py", line 1329, in run
          match.run(runner.context)
        File "c:\tools\python38\lib\site-packages\behave\matchers.py", line 98, in run
          self.func(context, *args, **kwargs)
        File "C:\Users\cromox\Desktop\newselenium\BDD_Behave_Selenium_MengKome\tests\python_main_site\steps\steps.py", line 18, in fill_in_user
          user = existing_valid_user()
      TypeError: existing_valid_user() missing 1 required positional argument: 'context'

    When I type password                                 # None
    When I click on 'Login'                              # None
    Then I should see the user information               # None
    And I logout                                         # None


You can implement step definitions for undefined steps with these snippets:

@given(u'I have non-exist user')
def step_impl(context):
    raise NotImplementedError(u'STEP: Given I have non-exist user')


@then(u'I should see the text \'Error: User not found\'')
def step_impl(context):
    raise NotImplementedError(u'STEP: Then I should see the text \'Error: User not found\'')


@given(u'I have a user')
def step_impl(context):
    raise NotImplementedError(u'STEP: Given I have a user')


@when(u'I type random password')
def step_impl(context):
    raise NotImplementedError(u'STEP: When I type random password')


@then(u'I should see the text \'Error: Incorrect password\'')
def step_impl(context):
    raise NotImplementedError(u'STEP: Then I should see the text \'Error: Incorrect password\'')


@then(u'I should see the text \'Error: Password field is empty\'')
def step_impl(context):
    raise NotImplementedError(u'STEP: Then I should see the text \'Error: Password field is empty\'')


@when(u'I type invalid format username')
def step_impl(context):
    raise NotImplementedError(u'STEP: When I type invalid format username')


@then(u'I should see the text \'Error: User not found\'')
def step_impl(context):
    raise NotImplementedError(u'STEP: Then I should see the text \'Error: User not found\'')


Failing scenarios:
  tests/python_main_site/features/feature1_login_invalid.feature:3  None existing user try to login
  tests/python_main_site/features/feature1_login_invalid.feature:11  User try to login with wrong password
  tests/python_main_site/features/feature1_login_invalid.feature:20  User try to login with no password
  tests/python_main_site/features/feature1_login_invalid.feature:28  User try to login with invalid format email
  tests/python_main_site/features/feature2_login_valid.feature:3  User login successfully

0 features passed, 2 failed, 0 skipped
0 scenarios passed, 5 failed, 0 skipped
2 steps passed, 1 failed, 13 skipped, 10 undefined
Took 0m8.459s
